#include "EmonLib.h"
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

EnergyMonitor emon;
#define vCalibration 106.8
#define currCalibration 0.52

const char* ssid = "";          // Replace with your WiFi SSID
const char* password = "";  // Replace with your WiFi password
const char* serverName = ""; // Replace with your Render.com URL
const char* token = "";   // Replace with user token from Django
const char* deviceName = "";         // Replace with your device name

float kWh = 0;
unsigned long lastmillis = millis();

void setup() {
  Serial.begin(9600);
  emon.voltage(35, vCalibration, 1.7); // Voltage: input pin, calibration, phase_shift
  emon.current(34, currCalibration);   // Current: input pin, calibration

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  if ((millis() - lastmillis) >= 5000) {
    emon.calcVI(20, 2000); // Calculate voltage and current

    // Print readings to Serial
    Serial.print("Vrms: "); Serial.print(emon.Vrms, 2); Serial.print("V\t");
    Serial.print("Irms: "); Serial.print(emon.Irms, 4); Serial.print("A\t");
    Serial.print("Power: "); Serial.print(emon.apparentPower, 4); Serial.print("W\t");
    kWh = kWh + emon.apparentPower * (millis() - lastmillis) / 3600000000.0;
    Serial.print("kWh: "); Serial.print(kWh, 4); Serial.println("kWh");
    lastmillis = millis();

    // Send data to Django API
    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;
      http.begin(serverName);
      http.addHeader("Content-Type", "application/json");
      http.addHeader("Authorization", "Token " + String(token));

      StaticJsonDocument<200> doc;
      doc["device_name"] = deviceName;
      doc["voltage"] = emon.Vrms;
      doc["current"] = emon.Irms;
      doc["power"] = emon.apparentPower;
      doc["energy"] = kWh;

      String requestBody;
      serializeJson(doc, requestBody);

      int httpResponseCode = http.POST(requestBody);
      if (httpResponseCode > 0) {
        Serial.println(httpResponseCode);
        Serial.println(http.getString());
      } else {
        Serial.print("Error on POST: ");
        Serial.println(httpResponseCode);
      }
      http.end();
    } else {
      Serial.println("WiFi Disconnected");
    }
  }
}