  #include "EmonLib.h"
  #include <WiFi.h>
  #include <HTTPClient.h>
  #include <ArduinoJson.h>

  EnergyMonitor emon;
  #define vCalibration 106.8
  #define currCalibration 0.52

  const char* ssid = "XD";          // Replace with your WiFi SSID
  const char* password = "NOW THE COCONUT";  // Replace with your WiFi password
  const char* serverName = "https://integrative-programming.onrender.com"; // Replace with your Render.com URL
  const char* token = "1d084e127ffa9aa4c00f9e7f4b29e206a8befee4";   // Replace with user token from Django
  const char* deviceName = "ABCD Group";         // Replace with your device name

  float kWh = 0;
  unsigned long lastmillis = millis();

  void setup() {
    Serial.begin(9600);
    emon.voltage(35, vCalibration, 1.7); // Voltage: input pin, calibration, phase_shift
    emon.current(34, currCalibration);   // Current: input pin, calibration

    // Connect to WiFi
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
      delay(1000);
      Serial.println("Connecting to WiFi...");
    }
    Serial.println("Connected to WiFi");
  }

  void loop() {
  // only run every 5 seconds
  unsigned long now = millis();
  if (now - lastmillis < 5000) return;
  unsigned long delta = now - lastmillis;
  lastmillis = now;

  // measure
  emon.calcVI(20, 2000);

  // compute kWh properly (ms → hours → kWh)
  kWh += emon.apparentPower * (delta / 3600000000.0);

  // debug
  Serial.print("Vrms: ");  Serial.print(emon.Vrms, 2);  Serial.print(" V\t");
  Serial.print("Irms: ");  Serial.print(emon.Irms, 4);  Serial.print(" A\t");
  Serial.print("Power: "); Serial.print(emon.apparentPower, 4); Serial.print(" W\t");
  Serial.print("kWh: ");   Serial.print(kWh, 4);           Serial.println(" kWh");

  // only post if we’re still connected
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    // <-- point at your DRF list/create endpoint
    String url = String(serverName) + "/api/energy-data/";
    http.begin(url);

    // headers
    http.addHeader("Content-Type", "application/json");
    http.addHeader("Authorization", "Token " + String(token));

    // build payload
    StaticJsonDocument<200> doc;
    doc["device_name"] = deviceName;
    doc["voltage"]     = emon.Vrms;
    doc["current"]     = emon.Irms;
    doc["power"]       = emon.apparentPower;
    doc["energy"]      = kWh;

    String body;
    serializeJson(doc, body);

    // POST it
    int code = http.POST(body);
    if (code > 0) {
      Serial.printf("HTTP %d – %s\n", code, http.getString().c_str());
    } else {
      Serial.printf("POST failed, error: %d\n", code);
    }
    http.end();
  } else {
    Serial.println("WiFi disconnected – skipping POST");
  }
}
